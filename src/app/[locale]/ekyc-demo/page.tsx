"use client";

/**
 * eKYC Demo - T√≠ch h·ª£p tr·ª±c ti·∫øp theo t√†i li·ªáu VNPT eKYC Web SDK ver 3.2.0.0
 *
 * File n√†y t√≠ch h·ª£p ƒê√öNG THEO T√ÄI LI·ªÜU, kh√¥ng d√πng wrapper/abstraction
 */

import React, { useEffect, useRef, useState } from "react";

// ===========================
// DECLARE GLOBAL WINDOW.SDK
// ===========================
declare global {
  interface Window {
    SDK: {
      launch: (config: any) => void;
      viewResult: (typeDocument: any, result: any) => void;
    };
  }
}

const EkycDemoPage: React.FC = () => {
  const [isSDKReady, setIsSDKReady] = useState(false);
  const [result, setResult] = useState<any>(null);
  const [error, setError] = useState<string | null>(null);
  const [configValid, setConfigValid] = useState(true);
  const containerRef = useRef<HTMLDivElement>(null);

  // ===========================
  // CONFIG THEO T√ÄI LI·ªÜU - L·∫•y t·ª´ .env.local
  // ===========================
  const BACKEND_URL =
    process.env.NEXT_PUBLIC_EKYC_BACKEND_URL || "https://api.idg.vnpt.vn";
  const TOKEN_KEY = process.env.NEXT_PUBLIC_EKYC_TOKEN_KEY || "";
  const TOKEN_ID = process.env.NEXT_PUBLIC_EKYC_TOKEN_ID || "";
  const ACCESS_TOKEN = process.env.NEXT_PUBLIC_EKYC_AUTH_TOKEN || "";

  // Validate credentials on mount
  useEffect(() => {
    console.log("‚öôÔ∏è Credentials loaded from .env.local:");
    console.log("BACKEND_URL:", BACKEND_URL);
    console.log(
      "TOKEN_KEY:",
      TOKEN_KEY ? `${TOKEN_KEY.substring(0, 20)}...` : "MISSING!",
    );
    console.log(
      "TOKEN_ID:",
      TOKEN_ID ? `${TOKEN_ID.substring(0, 20)}...` : "MISSING!",
    );
    console.log(
      "ACCESS_TOKEN:",
      ACCESS_TOKEN ? `${ACCESS_TOKEN.substring(0, 30)}...` : "MISSING!",
    );

    if (!TOKEN_KEY || !TOKEN_ID || !ACCESS_TOKEN) {
      setConfigValid(false);
      setError(
        "Thi·∫øu th√¥ng tin x√°c th·ª±c! Vui l√≤ng ki·ªÉm tra .env.local c√≥ ƒë·∫ßy ƒë·ªß NEXT_PUBLIC_EKYC_TOKEN_KEY, TOKEN_ID v√† AUTH_TOKEN",
      );
    } else {
      setConfigValid(true);
    }
  }, []);

  // ===========================
  // CALLBACK FUNCTION
  // ===========================
  const getResult = (result: any) => {
    console.log("========================================");
    console.log("‚úÖ CALLBACK ƒë∆∞·ª£c g·ªçi!");
    console.log("üì¶ Result:", result);
    console.log("========================================");

    setResult(result);

    // X·ª≠ l√Ω result theo t√†i li·ªáu
    if (result) {
      console.log("üìÑ Type Document:", result.type_document);
      console.log("üìä OCR Data:", result.ocr);
      console.log("üë§ Face Data:", result.liveness_face);
      console.log("üîó Compare:", result.compare);
    }
  };

  // ===========================
  // LOAD SDK SCRIPTS
  // ===========================
  useEffect(() => {
    console.log("üîÑ Loading eKYC SDK scripts...");

    // Load c√°c script theo th·ª© t·ª±
    const scripts = [
      "/web-sdk-version-3.2.0.0.js",
      "/lib/VNPTQRBrowserApp.js",
      "/lib/VNPTBrowserSDKAppV4.0.0.js",
    ];

    let loadedCount = 0;

    const loadScript = (src: string) => {
      return new Promise((resolve, reject) => {
        const script = document.createElement("script");
        script.src = src;
        script.defer = true;
        script.onload = () => {
          console.log(`‚úÖ Loaded: ${src}`);
          resolve(src);
        };
        script.onerror = () => {
          console.error(`‚ùå Failed to load: ${src}`);
          reject(new Error(`Failed to load ${src}`));
        };
        document.head.appendChild(script);
      });
    };

    // Load t·∫•t c·∫£ scripts
    Promise.all(scripts.map(loadScript))
      .then(() => {
        console.log("‚úÖ All scripts loaded!");
        setIsSDKReady(true);
      })
      .catch((err) => {
        console.error("‚ùå Error loading scripts:", err);
        setError("Kh√¥ng th·ªÉ t·∫£i SDK. Vui l√≤ng ki·ªÉm tra c√°c file SDK.");
      });

    // Cleanup
    return () => {
      scripts.forEach((src) => {
        const script = document.querySelector(`script[src="${src}"]`);
        if (script) {
          script.remove();
        }
      });
    };
  }, []);

  // ===========================
  // LAUNCH SDK
  // ===========================
  useEffect(() => {
    if (!isSDKReady) return;

    // ƒê·ª£i m·ªôt ch√∫t ƒë·ªÉ ƒë·∫£m b·∫£o window.SDK ƒë√£ s·∫µn s√†ng
    const timer = setTimeout(() => {
      if (window.SDK) {
        console.log("üöÄ Launching SDK with config...");

        // CONFIG THEO T√ÄI LI·ªÜU (M·ª•c 2.2 - B·∫£ng y√™u c·∫ßu)
        const dataConfig = {
          // 1. BACKEND_URL
          BACKEND_URL: BACKEND_URL,

          // 2. TOKEN_KEY
          TOKEN_KEY: TOKEN_KEY,

          // 3. TOKEN_ID
          TOKEN_ID: TOKEN_ID,

          // 4. ACCESS_TOKEN
          ACCESS_TOKEN: ACCESS_TOKEN,

          // 5. HAS_RESULT_SCREEN - Hi·ªán/·∫©n m√†n h√¨nh k·∫øt qu·∫£
          HAS_RESULT_SCREEN: true,

          // 6. CALL_BACK - Function nh·∫≠n k·∫øt qu·∫£ (B·∫ÆT BU·ªòC!)
          CALL_BACK: getResult,

          // 7. ENABLE_API_LIVENESS_DOCUMENT - Check liveness card
          ENABLE_API_LIVENESS_DOCUMENT: true,

          // 8. ENABLE_API_LIVENESS_FACE - Check liveness face
          ENABLE_API_LIVENESS_FACE: true,

          // 9. ENABLE_API_MASKED_FACE - Check mask face
          ENABLE_API_MASKED_FACE: true,

          // 10. ENABLE_API_COMPARE_FACE - Compare face
          ENABLE_API_COMPARE_FACE: true,

          // 11. SDK_FLOW - Lu·ªìng eKYC
          // DOCUMENT_TO_FACE: lu·ªìng ƒë·∫ßy ƒë·ªß b·∫Øt ƒë·∫ßu ch·ª•p gi·∫•y t·ªù ƒë·∫øn qu√©t m·∫∑t
          // FACE_TO_DOCUMENT: lu·ªìng ƒë·∫ßy ƒë·ªß b·∫Øt ƒë·∫ßu t·ª´ qu√©t m·∫∑t t·ªõi ch·ª•p gi·∫•y t·ªù
          // FACE: ch·ªâ qu√©t m·∫∑t
          // DOCUMENT: ch·ªâ ocr gi·∫•y t·ªù
          SDK_FLOW: "DOCUMENT_TO_FACE",

          // 12. LIST_TYPE_DOCUMENT - Danh s√°ch lo·∫°i gi·∫•y t·ªù
          // -1: Ch·ª©ng minh th∆∞
          // 5: H·ªô chi·∫øu
          // 6: B·∫±ng L√°i Xe
          // 7: Ch·ª©ng minh th∆∞ qu√¢n ƒë·ªôi
          // 9: CCCD g·∫Øn chip
          // 4: Gi·∫•y t·ªù kh√°c
          LIST_TYPE_DOCUMENT: [-1, 5, 6, 7, 9],

          // 13. CUSTOM_THEME (optional)
          // CUSTOM_THEME: {
          //   PRIMARY_COLOR: '#18d696',
          //   TEXT_COLOR_DEFAULT: '#ffffff',
          //   BACKGROUND_COLOR: '#0F2B3B'
          // },

          // 14. CHALLENGE_CODE (optional)
          // CHALLENGE_CODE: "",

          // 15. SHOW_STEP - Hi·ªán/·∫©n thanh b∆∞·ªõc
          SHOW_STEP: true,

          // 16. HAS_QR_SCAN - B·∫≠t/t·∫Øt qu√©t QR
          HAS_QR_SCAN: false,

          // 17. DOCUMENT_TYPE_START - Ch·ªçn ID document m·∫∑c ƒë·ªãnh
          // 999: hi·ªÉn th·ªã danh s√°ch ch·ªçn document
          DOCUMENT_TYPE_START: 999,

          // 18. DEFAULT_LANGUAGE - Ng√¥n ng·ªØ
          DEFAULT_LANGUAGE: "vi",

          // 19. DOUBLE_LIVENESS - Face verify 2 l·∫ßn
          DOUBLE_LIVENESS: false,

          // 20. FAKE_CAM_LABEL (optional)
          // FAKE_CAM_LABEL: "",

          // 21. CALL_BACK_DOCUMENT_RESULT (optional)
          // CALL_BACK_DOCUMENT_RESULT: async (result) => {
          //   console.log("Document result:", result);
          // },

          // 28. USE_METHOD - Ph∆∞∆°ng th·ª©c x√°c th·ª±c
          // ‚ö†Ô∏è BUG: "BOTH" KH√îNG HO·∫†T ƒê·ªòNG theo t√†i li·ªáu!
          // PHOTO: ch·ªâ cho ph√©p ch·ª•p tr·ª±c ti·∫øp (recommended)
          // UPLOAD: ch·ªâ cho ph√©p t·∫£i ·∫£nh l√™n
          USE_METHOD: "PHOTO", // FIX: D√πng "PHOTO" thay v√¨ "BOTH"

          // 29. SHOW_TAB_RESULT_INFORMATION - Hi·ªán/·∫©n tab th√¥ng tin
          SHOW_TAB_RESULT_INFORMATION: true,

          // 30. SHOW_TAB_RESULT_VALIDATION - Hi·ªán/·∫©n tab x√°c th·ª±c
          SHOW_TAB_RESULT_VALIDATION: true,

          // 31. SHOW_TAB_RESULT_QRCODE - Hi·ªán/·∫©n tab QR
          SHOW_TAB_RESULT_QRCODE: true,

          // 36. MAX_SIZE_IMAGE - K√≠ch th∆∞·ªõc t·ªëi ƒëa ·∫£nh (MB)
          MAX_SIZE_IMAGE: 1,
        };

        console.log("üìã Config:", dataConfig);

        try {
          window.SDK.launch(dataConfig);
          console.log("‚úÖ SDK launched successfully!");
        } catch (err) {
          console.error("‚ùå Error launching SDK:", err);
          setError("Kh√¥ng th·ªÉ kh·ªüi ƒë·ªông SDK: " + (err as Error).message);
        }
      } else {
        console.error("‚ùå window.SDK is not available!");
        setError("window.SDK kh√¥ng t·ªìn t·∫°i. Vui l√≤ng ki·ªÉm tra c√°c file SDK.");
      }
    }, 500);

    return () => clearTimeout(timer);
  }, [isSDKReady]);

  // ===========================
  // RENDER
  // ===========================
  return (
    <div style={{ padding: "20px", fontFamily: "Arial, sans-serif" }}>
      <h1>üéØ eKYC Demo - T√≠ch h·ª£p theo t√†i li·ªáu VNPT</h1>
      <p style={{ color: "#666", marginBottom: "20px" }}>
        Demo t√≠ch h·ª£p tr·ª±c ti·∫øp theo t√†i li·ªáu VNPT eKYC Web SDK ver 3.2.0.0
      </p>

      {/* Status */}
      <div
        style={{
          padding: "15px",
          marginBottom: "20px",
          borderRadius: "8px",
          backgroundColor: isSDKReady ? "#d4edda" : "#fff3cd",
          border: `1px solid ${isSDKReady ? "#c3e6cb" : "#ffeeba"}`,
        }}
      >
        <strong>Tr·∫°ng th√°i:</strong>{" "}
        {isSDKReady ? "‚úÖ SDK ƒë√£ s·∫µn s√†ng" : "‚è≥ ƒêang t·∫£i SDK..."}
      </div>

      {/* Credentials Info */}
      <div
        style={{
          padding: "15px",
          marginBottom: "20px",
          borderRadius: "8px",
          backgroundColor: configValid ? "#d1ecf1" : "#fff3cd",
          border: `1px solid ${configValid ? "#bee5eb" : "#ffeeba"}`,
          fontSize: "14px",
        }}
      >
        <strong>‚öôÔ∏è Credentials (t·ª´ .env.local):</strong>
        <ul style={{ margin: "10px 0", paddingLeft: "20px" }}>
          <li>
            <code>BACKEND_URL</code>: {BACKEND_URL || "(ch∆∞a set)"}
          </li>
          <li>
            <code>TOKEN_KEY</code>:{" "}
            {TOKEN_KEY ? (
              <span style={{ color: "green" }}>‚úÖ ƒê√£ c√≥</span>
            ) : (
              <span style={{ color: "red" }}>‚ùå Thi·∫øu!</span>
            )}
          </li>
          <li>
            <code>TOKEN_ID</code>:{" "}
            {TOKEN_ID ? (
              <span style={{ color: "green" }}>‚úÖ ƒê√£ c√≥</span>
            ) : (
              <span style={{ color: "red" }}>‚ùå Thi·∫øu!</span>
            )}
          </li>
          <li>
            <code>ACCESS_TOKEN</code>:{" "}
            {ACCESS_TOKEN ? (
              <span style={{ color: "green" }}>‚úÖ ƒê√£ c√≥</span>
            ) : (
              <span style={{ color: "red" }}>‚ùå Thi·∫øu!</span>
            )}
          </li>
        </ul>
        {!configValid && (
          <div
            style={{
              marginTop: "10px",
              padding: "10px",
              backgroundColor: "#fff3cd",
              borderRadius: "4px",
              fontSize: "13px",
            }}
          >
            <strong>‚ö†Ô∏è L∆∞u √Ω:</strong> Ki·ªÉm tra file <code>.env.local</code> c√≥
            ƒë·∫ßy ƒë·ªß c√°c bi·∫øn:
            <br />
            <code>NEXT_PUBLIC_EKYC_TOKEN_KEY</code>
            <br />
            <code>NEXT_PUBLIC_EKYC_TOKEN_ID</code>
            <br />
            <code>NEXT_PUBLIC_EKYC_AUTH_TOKEN</code>
          </div>
        )}
      </div>

      {/* Error */}
      {error && (
        <div
          style={{
            padding: "15px",
            marginBottom: "20px",
            borderRadius: "8px",
            backgroundColor: "#f8d7da",
            border: "1px solid #f5c6cb",
            color: "#721c24",
          }}
        >
          <strong>‚ùå L·ªói:</strong> {error}
        </div>
      )}

      {/* Result */}
      {result && (
        <div
          style={{
            padding: "15px",
            marginBottom: "20px",
            borderRadius: "8px",
            backgroundColor: "#d1ecf1",
            border: "1px solid #bee5eb",
          }}
        >
          <h3 style={{ marginTop: 0 }}>‚úÖ K·∫øt qu·∫£ eKYC</h3>
          <details>
            <summary
              style={{ cursor: "pointer", fontWeight: "bold", padding: "5px" }}
            >
              üì¶ Xem chi ti·∫øt (Click ƒë·ªÉ m·ªü)
            </summary>
            <pre
              style={{
                marginTop: "10px",
                padding: "15px",
                backgroundColor: "#f8f9fa",
                borderRadius: "4px",
                overflow: "auto",
                fontSize: "12px",
              }}
            >
              {JSON.stringify(result, null, 2)}
            </pre>
          </details>

          {/* Hi·ªÉn th·ªã th√¥ng tin quan tr·ªçng */}
          {result.type_document !== undefined && (
            <div style={{ marginTop: "15px" }}>
              <p>
                <strong>Lo·∫°i gi·∫•y t·ªù:</strong>{" "}
                {result.type_document === -1
                  ? "Ch·ª©ng minh th∆∞"
                  : result.type_document === 5
                    ? "H·ªô chi·∫øu"
                    : result.type_document === 6
                      ? "B·∫±ng l√°i xe"
                      : result.type_document === 7
                        ? "CMT Qu√¢n ƒë·ªôi"
                        : result.type_document === 9
                          ? "CCCD g·∫Øn chip"
                          : "Kh√°c"}
              </p>
            </div>
          )}

          {result.ocr && (
            <div style={{ marginTop: "10px" }}>
              <h4>üìÑ Th√¥ng tin OCR:</h4>
              <ul style={{ margin: "5px 0" }}>
                {result.ocr.name && <li>H·ªç t√™n: {result.ocr.name}</li>}
                {result.ocr.id && <li>S·ªë ID: {result.ocr.id}</li>}
                {result.ocr.birth_day && (
                  <li>Ng√†y sinh: {result.ocr.birth_day}</li>
                )}
                {result.ocr.gender && <li>Gi·ªõi t√≠nh: {result.ocr.gender}</li>}
              </ul>
            </div>
          )}
        </div>
      )}

      {/* SDK Container */}
      <div
        id="ekyc_sdk_intergrated"
        ref={containerRef}
        style={{
          width: "100%",
          minHeight: "600px",
          border: "2px dashed #ddd",
          borderRadius: "8px",
          display: "flex",
          alignItems: "center",
          justifyContent: "center",
          backgroundColor: "#f8f9fa",
        }}
      >
        {!isSDKReady && (
          <div style={{ textAlign: "center", color: "#666" }}>
            <p style={{ fontSize: "18px" }}>‚è≥ ƒêang t·∫£i SDK...</p>
            <p style={{ fontSize: "14px" }}>Vui l√≤ng ƒë·ª£i trong gi√¢y l√°t</p>
          </div>
        )}
      </div>

      {/* Instructions */}
      <div
        style={{
          marginTop: "30px",
          padding: "20px",
          backgroundColor: "#f8f9fa",
          borderRadius: "8px",
          border: "1px solid #dee2e6",
        }}
      >
        <h3>üìã H∆∞·ªõng d·∫´n s·ª≠ d·ª•ng:</h3>
        <ol>
          <li>
            <strong>‚úÖ Credentials t·ª± ƒë·ªông load t·ª´ .env.local</strong>
            <br />
            File n√†y ƒë√£ t·ª± ƒë·ªông ƒë·ªçc c√°c bi·∫øn:
            <ul style={{ marginTop: "5px" }}>
              <li>
                <code>NEXT_PUBLIC_EKYC_BACKEND_URL</code>
              </li>
              <li>
                <code>NEXT_PUBLIC_EKYC_TOKEN_KEY</code>
              </li>
              <li>
                <code>NEXT_PUBLIC_EKYC_TOKEN_ID</code>
              </li>
              <li>
                <code>NEXT_PUBLIC_EKYC_AUTH_TOKEN</code>
              </li>
            </ul>
            Ki·ªÉm tra ph·∫ßn "Credentials" ·ªü tr√™n ƒë·ªÉ xem c√≥ ƒë·∫ßy ƒë·ªß kh√¥ng.
          </li>
          <li>
            ƒê·∫£m b·∫£o c√°c file SDK ƒë√£ ƒë∆∞·ª£c ƒë·∫∑t trong <code>public/</code>:
            <ul>
              <li>
                <code>web-sdk-version-3.2.0.0.js</code>
              </li>
              <li>
                <code>lib/VNPTQRBrowserApp.js</code>
              </li>
              <li>
                <code>lib/VNPTBrowserSDKAppV4.0.0.js</code>
              </li>
            </ul>
          </li>
          <li>
            Ch·∫°y app: <code>npm run dev</code>
          </li>
          <li>
            M·ªü trang: <code>http://localhost:3000/vi/ekyc-demo</code>
          </li>
          <li>Th·ª±c hi·ªán eKYC v√† xem k·∫øt qu·∫£ trong console + UI</li>
        </ol>

        <h4 style={{ marginTop: "20px" }}>üîß C√°c SDK_FLOW c√≥ th·ªÉ d√πng:</h4>
        <ul>
          <li>
            <code>DOCUMENT_TO_FACE</code> - Lu·ªìng ƒë·∫ßy ƒë·ªß: Gi·∫•y t·ªù ‚Üí M·∫∑t (ƒëang
            d√πng)
          </li>
          <li>
            <code>FACE_TO_DOCUMENT</code> - Lu·ªìng ƒë·∫ßy ƒë·ªß: M·∫∑t ‚Üí Gi·∫•y t·ªù
          </li>
          <li>
            <code>DOCUMENT</code> - Ch·ªâ OCR gi·∫•y t·ªù
          </li>
          <li>
            <code>FACE</code> - Ch·ªâ qu√©t m·∫∑t
          </li>
        </ul>

        <h4 style={{ marginTop: "20px" }}>üîç Theo d√µi trong Console (F12):</h4>
        <ul>
          <li>
            T√¨m log: <code>[EKYC CALLBACK]</code>
          </li>
          <li>Ki·ªÉm tra object result chi ti·∫øt</li>
        </ul>
      </div>

      {/* Footer */}
      <div
        style={{
          marginTop: "30px",
          padding: "15px",
          textAlign: "center",
          fontSize: "12px",
          color: "#666",
          borderTop: "1px solid #dee2e6",
        }}
      >
        <p>
          üìö T√≠ch h·ª£p theo t√†i li·ªáu:{" "}
          <strong>T√ÄI LI·ªÜU H∆Ø·ªöNG D·∫™N T√çCH H·ª¢P SDK eKYC WEB - ver3.2.0.0</strong>
        </p>
        <p>Ng√†y hi·ªáu l·ª±c: 09/10/2024</p>
      </div>
    </div>
  );
};

export default EkycDemoPage;
